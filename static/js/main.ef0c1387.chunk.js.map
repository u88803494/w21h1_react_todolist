{"version":3,"sources":["Todo.js","Utils.js","App.js","serviceWorker.js","index.js"],"names":["Todo","delete","props","todo","deleteTodo","id","editing","editTodo","content","mark","markTodo","this","className","type","name","checked","isCompleted","onChange","onClick","React","Component","Editing","Update","e","key","handleUpdate","editingTodo","Change","handleEditingChange","target","value","cancelEdit","placeholder","text","onKeyPress","Processing","App","handleChange","setState","todoText","state","handleSubmit","todos","map","isEditing","isProcessing","filter","todoData","window","localStorage","getItem","oldData","JSON","parse","length","_prevProps","prevState","setItem","stringify","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef0c1387.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Todo extends React.Component {\r\n  delete = () => {\r\n    const { todo, deleteTodo } = this.props;\r\n    deleteTodo(todo.id);\r\n  };\r\n\r\n  editing = () => {\r\n    // if(e.target.className.indexOf('edit')) {alert('有惹')} \r\n    // 思考之後可以用這個判斷來把 function 功能寫在一起\r\n    const { editTodo, todo } = this.props;\r\n    editTodo(todo.id, todo.content);\r\n  };\r\n\r\n  mark = () => {\r\n    const { todo, markTodo } = this.props;\r\n    markTodo(todo.id);\r\n  };\r\n\r\n  render() {\r\n    const { todo } = this.props;\r\n    return (\r\n      <div className=\"todotlist__item form-check\">\r\n        <input className=\"todolist__done form-check-input\" type=\"checkbox\" name=\"done\"\r\n          checked={todo.isCompleted} onChange={this.mark} />\r\n        <label className=\"todolist__content form-check-label\">\r\n          {todo.content}\r\n        </label>\r\n        <button type=\"button\" className=\"todolist__edit btn btn-outline-secondary\"\r\n          onClick={this.editing}>編輯</button>\r\n        <button type=\"button\" className=\"todolist__delete btn btn-outline-secondary\"\r\n          onClick={this.delete}>刪除</button>\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\n\nclass Editing extends React.Component {\n  Update = (e) => {\n    if (e.key === 'Enter') {\n      const { handleUpdate, editingTodo } = this.props\n      handleUpdate(editingTodo.id)\n    }\n  }\n\n  Change = (e) => {\n    const { handleEditingChange } = this.props\n    handleEditingChange(e.target.value)\n  }\n\n  render() {\n    const { editingTodo, cancelEdit } = this.props;\n    return (\n      <div id=\"light\" className=\"editing__area\">\n        <h1>編輯頁面</h1>\n        <hr />\n        <h6>Notice：編輯完成按下 enter 即可送出資料</h6>\n        <input className=\"form-control form-control-sm\" id=\"edit\" type=\"text\"\n          placeholder=\"編輯完成後按下 enter 即可\"\n          value={editingTodo.text} onChange={this.Change} onKeyPress={this.Update} />\n        <input type=\"hidden\" className=\"editing__id\" name=\"editing__id\" />\n        <button type=\"button\" className=\"editing__cancel btn btn-outline-secondary\"\n          onClick={cancelEdit}>取消編輯</button>\n      </div>\n    );\n  }\n}\n\nfunction Processing() {\n  return <div id=\"fade\" className=\"editing__background\" />\n}\n\nexport { Editing, Processing };\n","import React from 'react';\nimport './App.css';\nimport { Todo } from './Todo';\nimport { Editing, Processing } from './Utils';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      todoText: '',\n      editingTodo: {},\n      isEditing: false,\n      isProcessing: false,\n    };\n    this.id = 1;\n  }\n\n  componentDidMount() {\n    const todoData = window.localStorage.getItem('todoapp');\n    if (todoData) { // 為了要保持狀態，所以這樣直接判斷\n      const oldData = JSON.parse(todoData);\n      this.setState({\n        ...oldData,\n      });\n      this.id = oldData.todos.length !== 0\n        ? oldData.todos[oldData.todos.length - 1].id + 1 : 1;\n      // 避免當資料全部刪除之後的無法 render\n    }\n  }\n\n  componentDidUpdate(_prevProps, prevState) { // 試著寫會還原狀態的 app\n    if (prevState !== this.state) {\n      window.localStorage.setItem('todoapp',\n        JSON.stringify(this.state));\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      todoText: e.target.value,\n    });\n  }\n\n  handleEditingChange = (text) => {\n    // 從傳入的改變，id 直接取暫存區的即可。\n    const { editingTodo } = this.state;\n    this.setState({\n      editingTodo: {\n        ...editingTodo,\n        text,\n      },\n    });\n  }\n\n  handleSubmit = (e) => {\n    const { todos, todoText } = this.state;\n    if (e.key === 'Enter') {\n      this.setState({\n        todos: [...todos, {\n          id: this.id,\n          isCompleted: false,\n          content: todoText,\n        }],\n        todoText: '',\n      });\n      this.id += 1;\n    }\n  }\n\n  handleUpdate = () => {\n    const { editingTodo, todos } = this.state;\n    this.setState({\n      todos: todos.map((todo) => {\n        if (todo.id !== editingTodo.id) return todo;\n        return {\n          ...todo,\n          content: editingTodo.text,\n        };\n      }),\n      isEditing: false,\n      isProcessing: false,\n      editingTodo: {},\n    });\n  };\n\n  deleteTodo = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id),\n    });\n  };\n\n  editTodo = (id, content) => {\n    this.setState({\n      editingTodo: { id, text: content },\n      isEditing: true,\n      isProcessing: true,\n    });\n  };\n\n  cancelEdit = () => {\n    this.setState({\n      isEditing: false,\n      isProcessing: false,\n    });\n  };\n\n  markTodo = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isCompleted: !todo.isCompleted,\n        }; // 只把不同 id 的部份做相反的處理\n      }),\n    });\n  };\n\n  render() {\n    const {\n      todos, todoText, isEditing, isProcessing, editingTodo,\n    } = this.state;\n    return (\n      <div className=\"App container\">\n        <div className=\"todolist__input\">\n          <h1> todolist </h1>\n          <input\n            className=\"form-control form-control-sm\"\n            id=\"input\"\n            type=\"text\"\n            placeholder=\"輸入代辦事項 輸入完成按下 enter 送出\"\n            onChange={this.handleChange}\n            value={todoText}\n            onKeyPress={this.handleSubmit}\n          />\n          <hr />\n        </div>\n        <div className=\"todolist__list\">\n          {todos.map(todo => (\n            <Todo\n              todo={todo}\n              key={todo.id}\n              deleteTodo={this.deleteTodo}\n              markTodo={this.markTodo}\n              editTodo={this.editTodo}\n            />\n          ))}\n        </div>\n        {isEditing && (\n          <Editing\n            cancelEdit={this.cancelEdit}\n            editingTodo={editingTodo}\n            handleEditingChange={this.handleEditingChange}\n            handleUpdate={this.handleUpdate}\n          />\n        )}\n        {isProcessing && <Processing />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}